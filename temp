Filter: https://practice.geeksforgeeks.org/tag-page.php?tag=Amazon&isCmp=1&level=1&problemType=0&sort=asc&sort_by=sub

3. https://practice.geeksforgeeks.org/problems/combination-sum/0 [doc it]
4. Distribute given sum among n beggers. (P&C)
5. https://practice.geeksforgeeks.org/problems/champagne-overflow/0
6. https://practice.geeksforgeeks.org/problems/next-permutation/0
9. https://practice.geeksforgeeks.org/problems/form-a-palindrome/0 
10. https://practice.geeksforgeeks.org/problems/egg-dropping-puzzle/0
'''
Created on Jan 23, 2020

@author: rj250201
'''

def get_max_profit(nums, k):
    nums = [0]+nums
    n = len(nums)
    dp = [[0 for i in range(n)] for j in range(k+1)]
    
    #for i in range(1, k+1):
    #    dp[i][i] = nums[i]
    '''
    i - transaction
    j - days
    '''    
    for i in range(1, k+1):
        for j in range(1, n):
            max_profit_j = 0
            for m in range(0, j):
                max_profit_j = max(max_profit_j, nums[j] - nums[m] + dp[i-1][m])
            dp[i][j] = max(max_profit_j, dp[i][j-1])
    
    for i in range(k+1):
        print(dp[i])

get_max_profit([10, 22, 5, 75, 65, 80], 3)
    
              
    
maxHeight([4,5], [2,3], [1,2], 2)
