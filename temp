Filter: https://practice.geeksforgeeks.org/tag-page.php?tag=Amazon&isCmp=1&level=1&problemType=0&sort=asc&sort_by=sub

3. https://practice.geeksforgeeks.org/problems/combination-sum/0 [doc it]
4. Distribute given sum among n beggers. (P&C)
5. https://practice.geeksforgeeks.org/problems/champagne-overflow/0
6. https://practice.geeksforgeeks.org/problems/next-permutation/0
9. https://practice.geeksforgeeks.org/problems/form-a-palindrome/0 
10. https://practice.geeksforgeeks.org/problems/egg-dropping-puzzle/0

'''
Created on 21-Jan-2020

@author: rjoshi
'''

def maxHeight(l, w, h, n):
    boxes = []
    for i in range(n):
        boxes.append((l[i], w[i], h[i]))
        boxes.append((l[i], h[i], w[i]))
        boxes.append((w[i], h[i], l[i]))
    
    print(boxes)  
    boxes = sorted(boxes, key=lambda x: x[0]*x[1], reverse=True)
    print(boxes)  
    
    n = len(boxes)
    
    arrange_max = [0]*n
    for i in range(n):
        arrange_max[i] = boxes[i][2]
    
    print(arrange_max) 
    for i in range(0, n-1):
        for j in range(i+1, n):
            if boxes[i][0] > boxes[j][0] and boxes[i][1] > boxes[j][1]:
                arrange_max[j] = max(arrange_max[j], arrange_max[j] + boxes[i][2])
        print(arrange_max) 
    
              
    
maxHeight([4,5], [2,3], [1,2], 2)
