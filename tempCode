def isPrime(n):
    sq = int(pow(n, 0.5))
    isPrime = True
    for i in range(2, sq+1):
        if n % i == 0:
            isPrime = False
            break
    return isPrime

def getPrimesTillN(n):
    pDict = {}
    sq = int(pow(n, 0.5))
    nonPrimes = 1
    for i in range(2, sq+2):
        if isPrime(i):
            for p in range(i*2, n+1, i):
                if p not in pDict:
                    nonPrimes += 1
                    pDict[p] = 1
    return n - nonPrimes

def getPrimeArr(n):
    pDict = {}
    primes = [1]*(n+1)
    primes[0] = 0
    sq = int(pow(n, 0.5))
    for i in range(2, sq+2):
        if isPrime(i):
            for p in range(i*2, n+1, i):
                if p not in pDict:
                    pDict[p] = 1
                    primes[p] = 0
    print(primes)
    count = 0
    for i in range(0, len(primes)):
        if primes[i] == 0:
            count += 1
        primes[i] = count
    return primes

n = 100
print(getPrimeArr(n))
print(getPrimesTillN(n))
'''
print("{0:b}".format(100000))
fr = []
for o in range(0, int(input())):
    (l, r) = input().split(" ")
    
    if l == r:
        if isPrime(int(l)):
'''
